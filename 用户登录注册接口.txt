1. 验证码校验
   请求方式: http://{host}/users/captcha
   请求方式: post
   请求参数: captcha -> 验证码
             token -> 验证码的token
   返回参数: {
      code: 1,
      message: '',
      data: 'token值'
   }

2. 设置密码和昵称
   请求地址: http://{host}/users/regist
   请求方式: PUT
   请求参数: password -> 密码
            name -> 昵称
   备注: 该请求带校验后的token值放在http header中
   返回参数: {
     code: 0/1,#0-注册失败 1-注册成功
     message: "返回信息"
     data:{
       token: "用户token值"
       username: "app和环信对应到key",
       uuid:"环信ID"
     }
   }

3. 用户登录
   请求地址: http://{host}/users
   请求方式: POST
   请求参数: username -> 用户名
             password -> 密码
   返回参数: {
     code: 0/1,#0-注册失败 1-注册成功
     message: "",
     data {
       token: "用户token值"
       username: "app和环信对应到key",
       uuid:"环信ID"
     }
   }   
4. 第三方登录
   请求地址: http://{host}/users/sns
   请求方式: POST
   请求参数: sns_name -> 那个第三方（weibo,qq,weixin）
             sns_id -> 第三方对应到ID
             name -> 第三方昵称
             icon -> 第三方头像
             gender -> 第三方性别
             birthday -> 生日
   返回参数: {
     code: 0/1,#0-注册失败 1-注册成功
     message: "",
     data {
       token: "用户token值"
       username: "app和环信对应到key",
       uuid:"环信ID"
     }
   }
5. 用户修改资料
   请求地址: http://{host}/users/0/profile
   请求方式: POST
   请求参数: name -> 用户名字
             icon -> 用户头像
             signature -> 签名
             gender -> 性别
             identity -> 身份 // 1，私教 2.健身爱好者 3.商家
   返回参数: {
     code: 0/1,#0-注册失败 1-注册成功,
     message: "返回信息"
   }
6. 用户登出
   请求地址: http://{host}/users
   请求方式: DELETE
   请求参数: 无
   返回参数: {
     code: 0/1,#0-注册失败 1-注册成功,
     message: "返回信息"
   }
